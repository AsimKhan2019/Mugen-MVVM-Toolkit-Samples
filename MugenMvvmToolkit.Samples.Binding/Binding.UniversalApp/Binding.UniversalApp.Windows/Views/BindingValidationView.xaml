<Page
    x:Class="Binding.UniversalApp.Views.BindingValidationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:markupExtensions="using:MugenMvvmToolkit.MarkupExtensions"
    xmlns:viewModels="using:Binding.Portable.ViewModels"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance viewModels:BindingValidationViewModel, IsDesignTimeCreatable=True}">

    <!--    Method $GetErrors() or $GetErrors(Prop1, Prop2, ... PropN) returns the errors from a data context object-->
    <!--    Validate=True is equivalent to ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True-->

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition />
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Margin="39,59,39,0" Command="{Binding Path=CloseCommand}"
                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                    VerticalAlignment="Top" />
            <TextBlock Text="{StaticResource AppName}" Style="{StaticResource HeaderTextBlockStyle}"
                       Grid.Column="1"
                       IsHitTestVisible="false" TextWrapping="NoWrap" VerticalAlignment="Bottom" Margin="0,0,30,40" />
        </Grid>


        <ScrollViewer Grid.Row="1" Margin="12,0,12,0">
            <StackPanel>
                <StackPanel.Resources>
                    <DataTemplate x:Key="TextWrapHeaderTemplate">
                        <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                    </DataTemplate>
                </StackPanel.Resources>

                <StackPanel markupExtensions:View.Bind="Visible $GetErrors().Any()">
                    <TextBlock Text="Validation summary:" Style="{StaticResource BaseTextBlockStyle}" />
                    <TextBlock markupExtensions:View.Bind="Text $string.Join($Environment.NewLine, $GetErrors())"
                               Foreground="Red" Style="{StaticResource BaseTextBlockStyle}" />
                </StackPanel>

                <TextBox Header="Binding to 'Property' with 'ValidatesOnNotifyDataErrors=True'"
                         markupExtensions:View.Bind="Text Property, Mode=TwoWay, ValidatesOnNotifyDataErrors=True"
                         HeaderTemplate="{StaticResource TextWrapHeaderTemplate}" />
                <TextBlock markupExtensions:View.Bind="Text $GetErrors(Property).FirstOrDefault()" Margin="1"
                           Foreground="Red" Style="{StaticResource BaseTextBlockStyle}" />


                <TextBox
                    Header="Binding to 'PropertyWithException' with 'ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=False'"
                    HeaderTemplate="{StaticResource TextWrapHeaderTemplate}"
                    markupExtensions:View.Bind="Text PropertyWithException, Mode=TwoWay, ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=False"
                    x:Name="Tb1" />
                <TextBlock markupExtensions:View.Bind="Text $El(Tb1).Errors.FirstOrDefault()" Margin="1"
                           Foreground="Red" Style="{StaticResource BaseTextBlockStyle}" />

                <TextBox
                    Header="Binding to 'PropertyWithException' with 'ValidatesOnNotifyDataErrors=False, ValidatesOnExceptions=True'"
                    HeaderTemplate="{StaticResource TextWrapHeaderTemplate}"
                    markupExtensions:View.Bind="Text PropertyWithException, Mode=TwoWay, ValidatesOnNotifyDataErrors=False, ValidatesOnExceptions=True"
                    x:Name="Tb2" />
                <TextBlock markupExtensions:View.Bind="Text $El(Tb2).Errors.FirstOrDefault()" Margin="1"
                           Foreground="Red" Style="{StaticResource BaseTextBlockStyle}" />


                <TextBox Header="Binding to 'PropertyWithException' with 'Validate=True'"
                         HeaderTemplate="{StaticResource TextWrapHeaderTemplate}"
                         markupExtensions:View.Bind="Text PropertyWithException, Mode=TwoWay, Validate=True" />
                <TextBlock markupExtensions:View.Bind="Text $GetErrors(PropertyWithException).FirstOrDefault()"
                           Margin="1" Foreground="Red" Style="{StaticResource BaseTextBlockStyle}" />

                <Button Margin="1" Content="Set error(PropertyWithException)" HorizontalAlignment="Stretch"
                        markupExtensions:View.Bind="Command AddErrorCommand" />
                <Button Margin="1" Content="Clear error(PropertyWithException)" HorizontalAlignment="Stretch"
                        markupExtensions:View.Bind="Command RemoveErrorCommand" />
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>