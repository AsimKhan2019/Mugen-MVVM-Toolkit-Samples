<Application x:Class="OrderManager.Wpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Application.Resources>

        <ViewModelToViewConverter x:Key="ViewModelToViewConverter" />
        <InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <ControlTemplate x:Key="SampleErrorTemplate" TargetType="Control">
            <Grid>
                <AdornedElementPlaceholder x:Name="Adorned" />
                <Border BorderThickness="1" BorderBrush="Red" Background="Transparent" IsHitTestVisible="False"
                        CornerRadius="1" />
                <Popup Placement="Right" PlacementTarget="{Binding ElementName=Adorned}" AllowsTransparency="True"
                       IsOpen="{Binding Path=AdornedElement.IsMouseOver, ElementName=Adorned, Mode=OneWay}"
                       MaxWidth="200" HorizontalOffset="2">
                    <Border Background="Red" Margin="0, 0, 10, 10" CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="3" Opacity="0.5" />
                        </Border.Effect>
                        <TextBlock Margin="5, 3" Foreground="White" TextWrapping="Wrap"
                                   Text="{Binding Path=AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=Adorned}" />
                    </Border>
                </Popup>
            </Grid>
        </ControlTemplate>

        <Style x:Key="ErrorTemplate" TargetType="Control">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource SampleErrorTemplate}" />
        </Style>


        <Style x:Key="DefaultGridStyle" TargetType="DataGrid">
            <Setter Property="Margin" Value="4" />
            <Setter Property="SelectedItem"
                    Value="{Binding Path=SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="ItemsSource"
                    Value="{Binding Path=ItemsSource}" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="IsReadOnly" Value="True" />
        </Style>

        <DataTemplate x:Key="TabItemTemplate">
            <StackPanel Orientation="Horizontal" Margin="2,2,2,2">
                <TextBlock FontSize="14" Text="{Binding Path=DisplayName}" />
                <TextBlock Text=" *" View.Visible="{Binding Path=HasChanges}" />
                <Button Margin="5 0 0 0" HorizontalAlignment="Right" VerticalAlignment="Center"
                        Command="{Binding Path=CloseCommand}">
                    <TextBlock TextWrapping="Wrap" Text="r" FontFamily="Webdings" Foreground="Black" FontSize="11" />
                </Button>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="TabContentTemplate">
            <Grid>
                <ContentPresenter Content="{Binding Converter={StaticResource ViewModelToViewConverter}}"
                                  IsEnabled="{Binding Path=IsBusy, Converter={StaticResource InverseBooleanConverter}}" />
                <StackPanel View.Visible="{Binding Path=IsBusy}" VerticalAlignment="Center" Margin="4" Width="200">
                    <TextBlock Text="{Binding Path=BusyMessage}" HorizontalAlignment="Center" TextWrapping="Wrap" />
                    <ProgressBar IsIndeterminate="True" HorizontalAlignment="Stretch" Height="10" />
                </StackPanel>
            </Grid>
        </DataTemplate>

        <Style x:Key="ImageToolbarButtonStyle" TargetType="Button"
               BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
        </Style>


        <Style TargetType="TextBox" BasedOn="{StaticResource ErrorTemplate}" />
        <Style TargetType="DatePicker" BasedOn="{StaticResource ErrorTemplate}" />
        <Style TargetType="ComboBox" BasedOn="{StaticResource ErrorTemplate}" />
        <Style TargetType="CheckBox" BasedOn="{StaticResource ErrorTemplate}" />

    </Application.Resources>
</Application>